{
  "name": "electron-download",
  "version": "2.1.2",
  "description": "download electron prebuilt binary zips from github releases",
  "main": "index.js",
  "bin": {
    "electron-download": "cli.js"
  },
  "scripts": {
    "test": "standard && node test.js && node test_symbols.js && node test_404.js && echo PASSED"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/electron-userland/electron-download.git"
  },
  "author": {
    "name": "max ogden"
  },
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/electron-userland/electron-download/issues"
  },
  "homepage": "https://github.com/electron-userland/electron-download#readme",
  "dependencies": {
    "debug": "^2.2.0",
    "home-path": "^1.0.1",
    "minimist": "^1.2.0",
    "mkdirp": "^0.5.0",
    "mv": "^2.0.3",
    "nugget": "^1.5.1",
    "path-exists": "^1.0.0",
    "rc": "^1.1.2"
  },
  "devDependencies": {
    "standard": "^3.11.1"
  },
  "keywords": [],
  "readme": "# electron-download\n\n[![Build Status](https://travis-ci.org/electron-userland/electron-download.svg?branch=master)](https://travis-ci.org/electron-userland/electron-download)\n\n[![NPM](https://nodei.co/npm/electron-download.png)](https://nodei.co/npm/electron-download/)\n\ndownloads a electron release zip from github\n\nused by [electron-prebuilt](https://npmjs.org/electron-prebuilt) and [electron-packager](https://npmjs.org/electron-packager)\n\n### usage\n\n```plain\n$ npm install --global electron-download\n$ electron-download --version=0.31.1\n```\n\n```\nvar download = require('electron-download')\n\ndownload({\n  version: '0.25.1',\n  arch: 'ia32',\n  platform: 'win32',\n  cache: './zips' // defaults to <users home directory>/.electron\n}, function (err, zipPath) {\n  // zipPath will be the path of the zip that it downloaded.\n  // if the zip was already cached it will skip\n  // downloading and call the cb with the cached zip path\n  // if it wasn't cached it will download the zip and save\n  // it in the cache path\n})\n```\n\nif you don't specify `arch` or `platform` args it will use `require('os')` to get them from the current OS. specifying `version` is mandatory.\n\nIf you would like to override the mirror location, three options are available. The mirror URL is composed as `url = ELECTRON_MIRROR + ELECTRON_CUSTOM_DIR + '/' + ELECTRON_CUSTOM_FILENAME`.\n\nYou can set the `ELECTRON_MIRROR` or [`NPM_CONFIG_ELECTRON_MIRROR`](https://docs.npmjs.com/misc/config#environment-variables) env or `mirror` opt variable to use a custom base URL for grabbing electron zips. The same pattern applies to `ELECTRON_CUSTOM_DIR` and `ELECTRON_CUSTOM_FILENAME`\n\n```plain\n## Electron Mirror of China\nELECTRON_MIRROR=\"https://npm.taobao.org/mirrors/electron/\"\n\n## or for a local mirror\nELECTRON_MIRROR=\"https://10.1.2.105/\"\nELECTRON_CUSTOM_DIR=\"our/internal/filePath\"\n```\n\n",
  "readmeFilename": "readme.md",
  "_id": "electron-download@2.1.2",
  "_from": "electron-download@^2.0.0"
}
